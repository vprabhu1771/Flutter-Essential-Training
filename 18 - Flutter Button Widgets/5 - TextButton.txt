Here's an example of a Flutter app that uses the `TextButton` widget:


import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('TextButton Example'),
        ),
        body: Center(
          child: TextButton(
            onPressed: () {
              // Handle button press
              print('Button pressed!');
            },
            style: TextButton.styleFrom(
              primary: Colors.blue, // Text color
              backgroundColor: Colors.grey[300], // Background color
              padding: EdgeInsets.all(16.0), // Padding around the button
            ),
            child: Text(
              'Press me',
              style: TextStyle(fontSize: 20.0),
            ),
          ),
        ),
      ),
    );
  }
}


In this example, we've created a simple Flutter app with a `TextButton` widget. The button is styled using the `style` property to set the text color, background color, and padding. The `onPressed` callback is where you can handle the button press event.

Feel free to customize the code further based on your needs and explore additional properties available in the `TextButton.styleFrom` and `Text` widgets.